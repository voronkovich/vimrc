snippet putest "PHPUnit test"
public function test_${1:feature}_should${2:Do}()
{
	${VISUAL}${0}
}
endsnippet

snippet putesti "PHPUnit test (if)"
public function test_${1:feature}_should${2:Do}_if${3:Condition}()
{
	${VISUAL}${0}
}
endsnippet

snippet putestw "PHPUnit test (with)"
public function test_${1:feature}_should${2:Do}_with${3:State}()
{
	${VISUAL}${0}
}
endsnippet

snippet desc "Describe spec" b
describe("${1}", function () {
	${VISUAL}${0};
});
endsnippet

snippet it "Test" b
it("${1}", function () {
	${VISUAL}${0};
});
endsnippet

snippet given "Given" b
given('${1}', function () {
	${VISUAL}${0};
});
endsnippet

snippet exp "expect()" b
expect(${1})->to${2}(${3});
endsnippet
